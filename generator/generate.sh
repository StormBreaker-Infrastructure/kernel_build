#!/usr/bin/env bash

#
# Copyright (C) 2019 Saalim Quadri (danascape)
#
# SPDX-License-Identifier: Apache-2.0 license
#

read -p "Do you want to generate sworkflow config? (y/n) " answer

generate_config() {
	read -p "Enter Device Name: " device_name

	if [[ -f sworkflow.$device_name.config ]]; then
		echo "error: Config for $device_name already present at $PWD/sworkflow.$device_name.config"
		exit 125
	fi

	if [ -z "$device_name" ]; then
		echo "error: device_name is a required value!"
		echo "error: Run the script again!"
		exit 125
	fi

	read -p "Enter Device Architecture: " device_arch
	if [ -z "$device_arch" ]; then
		echo "error: device_arch is a required value!"
		echo "error: Run the script again!"
		exit 125
	fi

	read -p "Does your device have a separate kernel architecture? (y/n) " answer
	if [[ $answer =~ ^[Yy]$ ]]; then
		read -p "Enter Kernel Architecture: " kernel_arch
	fi

	read -p "Enter Device Defconfig: " kernel_defconfig
	if [ -z "$kernel_defconfig" ]; then
		echo "error: kernel_defconfig is a required variable!"
		echo "error: Run the script again!"
		exit 125
	fi

	read -p "Do your Kernel need a separate Cross Compiler? (y/n) " answer
	if [[ $answer =~ ^[Yy] ]]; then
		read -p "Enter Kernel Cross Compiler(64): " cross_compile
		read -p "Enter Kernel Cross Compiler(32): " cross_compile_32
	fi

	read -p "Does your kernel use clang? (y/n) " answer
	if [[ $answer =~ ^[Yy] ]]; then
		use_clang=1
	fi

	read -p "Do your device need DTBO? (y/n) " answer
	if [[ $answer =~ ^[Yy] ]]; then
		create_dtbo=1
		read -p "Enter DTBO Page Size: " dtbo_page_size
		read -p "Enter DTBO Path relative to outdir: " dtbo_arch_path
	fi

	echo "sworkflow: Generating Config..."
	sleep 2
	echo "#!/usr/bin/env bash

#############################################
# Name:		$device_name Config
# Description:  Autogenerated Configuration file
# Author:	Saalim Quadri (danascape)
#############################################

#
# Required Workflow Configs
#
# Target Device Architecture
device_arch="$device_arch"

# Target Device Defconfig
kernel_defconfig="$kernel_defconfig"" >> sworkflow.$device_name.config

	if [[ -n $kernel_arch ]]; then
		echo "
kernel_arch="$kernel_arch"" >> sworkflow.$device_name.config
	fi

	if [[ -n $cross_compile ]]; then
		echo "
# Kernel Cross Compiler
cross_compile=$cross_compile
cross_compile_arm32=$cross_compile_32" >> sworkflow.$device_name.config
	fi

	if [[ -n $use_clang ]]; then
		echo "
use_clang=1" >> sworkflow.$device_name.config
	fi

	if [[ -n $create_dtbo ]]; then
		echo "
## Target Device DTBO config
create_dtbo=1
dtbo_page_size=$dtbo_page_size
dtbo_arch_path=$dtbo_arch_path" >> sworkflow.$device_name.config
	fi

	echo "sworkflow: Config Created at $PWD/sworkflow.$device_name.config..."
}

if [[ $answer =~ ^[Yy]$ ]]; then
	echo "sworkflow: Starting the daemon..."
	sleep 2
	clear
	generate_config
else
	echo "sworkflow: Exiting..."
	exit 125
fi
